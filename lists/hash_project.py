from functools import reduce
from itertools import product

print(*{k: v for k, v in sorted({list(product(["sum", "polynomial", "shift"], ["division", "fold", "mad"]))[i]: result for i, result in enumerate([32 - len({f2(f1(key)) for key in ["apple", "voadora", "banjo", "banana", "cherry", "date", "elderberry", "fig", "grape", "honeydew", "kiwi", "xuru", "runin", "xamã", "mirtilho", "lemon", "mango", "nectarine", "orange", "papaya", "quince", "raspberry", "strawberry", "tangerine", "ugli", "voavanga", "maravilha", "IFCE", "maracanaú", "ceará", "manga", "rendemption", "bobo", "maluco"]}) for f1, f2 in product([lambda x: sum(ord(c) for c in x), lambda x: sum(ord(c) * 31 ** i for i, c in enumerate(x)), lambda x: reduce(lambda h, c: ((h << 1 & (1 << 32) - 1) | (h >> 31)) + ord(c), x, 0), ], [lambda x: x % 32, lambda x: (lambda r: sum(int(digit) for digit in str(r)) if r > 31 else r)(reduce(lambda p, q: p + q, list(map(lambda z: int(z), [str(x)[i:i+2] for i in range(0, len(str(x)), 2)])))), lambda x: ((17 * x + 11) % 83) % 31,])])}.items(), key=lambda item: item[1], reverse=True)}.items(), sep="\n")
